import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.957b8f8c.js";const d=JSON.parse('{"title":"使用 C++ 和 node-addon-api","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/using-cpp.md","filePath":"zh/guide/using-cpp.md","lastUpdated":1699777824000}'),p={name:"zh/guide/using-cpp.md"},o=l(`<h1 id="使用-c-和-node-addon-api" tabindex="-1">使用 C++ 和 node-addon-api <a class="header-anchor" href="#使用-c-和-node-addon-api" aria-label="Permalink to &quot;使用 C++ 和 node-addon-api&quot;">​</a></h1><p>需要 <a href="https://github.com/nodejs/node-addon-api" target="_blank" rel="noreferrer"><code>node-addon-api</code></a> <code>&gt;= 6.1.0</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node-addon-api</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node-addon-api</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>使用 C++ wrapper 编译出的代码只能运行在 Node.js v14.6.0+ 和支持 <code>FinalizationRegistry</code> 和 <code>WeakRef</code> 的现代浏览器（<a href="https://v8.dev/blog/v8-release-84" target="_blank" rel="noreferrer">v8 引擎 v8.4+</a>)！</p></div><p>创建 <code>hello.cpp</code>。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;napi.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JsHello</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">CallbackInfo</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">info</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::Env env </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> info.</span><span style="color:#B392F0;">Env</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">New</span><span style="color:#E1E4E8;">(env, </span><span style="color:#9ECBFF;">&quot;world&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Object</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Init</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Env</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">env</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Object</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">exports</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  exports.</span><span style="color:#B392F0;">Set</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">New</span><span style="color:#E1E4E8;">(env, </span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#B392F0;">Napi</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Function</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">New</span><span style="color:#E1E4E8;">(env, JsHello, </span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">)).</span><span style="color:#B392F0;">Check</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> exports;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">NODE_API_MODULE</span><span style="color:#E1E4E8;">(NODE_GYP_MODULE_NAME, Init)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;napi.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JsHello</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">CallbackInfo</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">info</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::Env env </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> info.</span><span style="color:#6F42C1;">Env</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">New</span><span style="color:#24292E;">(env, </span><span style="color:#032F62;">&quot;world&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Object</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Init</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Env</span><span style="color:#24292E;"> </span><span style="color:#E36209;">env</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Object</span><span style="color:#24292E;"> </span><span style="color:#E36209;">exports</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  exports.</span><span style="color:#6F42C1;">Set</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">New</span><span style="color:#24292E;">(env, </span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6F42C1;">Napi</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">Function</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">New</span><span style="color:#24292E;">(env, JsHello, </span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">)).</span><span style="color:#6F42C1;">Check</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> exports;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">NODE_API_MODULE</span><span style="color:#24292E;">(NODE_GYP_MODULE_NAME, Init)</span></span></code></pre></div><p>使用 <code>em++</code> 编译 <code>hello.cpp</code>。Emscripten 默认禁用 C++ 异常，所以这里也预定义了 <code>-DNAPI_DISABLE_CPP_EXCEPTIONS</code> 和 <code>-DNODE_ADDON_API_ENABLE_MAYBE</code>。如果想启用 C++ 异常，请改用 <code>-sDISABLE_EXCEPTION_CATCHING=0</code> 并删掉 <code>.Check()</code> 调用。请在<a href="https://github.com/nodejs/node-addon-api/blob/main/doc/error_handling.md" target="_blank" rel="noreferrer">这里</a>查看官方文档。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-N1Nu1" id="tab-TmXRwW_" checked="checked"><label for="tab-TmXRwW_">emscripten</label><input type="radio" name="group-N1Nu1" id="tab-66Jhwfl"><label for="tab-66Jhwfl">wasi-sdk</label><input type="radio" name="group-N1Nu1" id="tab-IYm92uW"><label for="tab-IYm92uW">clang</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">em++</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-O3</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-DBUILDING_NODE_EXTENSION</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-DNAPI_DISABLE_CPP_EXCEPTIONS</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-DNODE_ADDON_API_ENABLE_MAYBE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">&quot;-DNAPI_EXTERN=__attribute__((__import_module__(</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">env</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">)))&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-I./node_modules/emnapi/include</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-I./node_modules/node-addon-api</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-L./node_modules/emnapi/lib/wasm32-emscripten</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">--js-library=./node_modules/emnapi/dist/library_napi.js</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-sEXPORTED_FUNCTIONS=</span><span style="color:#9ECBFF;">&quot;[&#39;_napi_register_wasm_v1&#39;,&#39;_node_api_module_get_api_version_v1&#39;,&#39;_malloc&#39;,&#39;_free&#39;]&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello.js</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">hello.cpp</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-lemnapi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">em++</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-O3</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-DBUILDING_NODE_EXTENSION</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-DNAPI_DISABLE_CPP_EXCEPTIONS</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-DNODE_ADDON_API_ENABLE_MAYBE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#032F62;">&quot;-DNAPI_EXTERN=__attribute__((__import_module__(</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">env</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">)))&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-I./node_modules/emnapi/include</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-I./node_modules/node-addon-api</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-L./node_modules/emnapi/lib/wasm32-emscripten</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">--js-library=./node_modules/emnapi/dist/library_napi.js</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-sEXPORTED_FUNCTIONS=</span><span style="color:#032F62;">&quot;[&#39;_napi_register_wasm_v1&#39;,&#39;_node_api_module_get_api_version_v1&#39;,&#39;_malloc&#39;,&#39;_free&#39;]&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello.js</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#032F62;">hello.cpp</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-lemnapi</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">clang++</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-O3</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-DBUILDING_NODE_EXTENSION</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-DNAPI_DISABLE_CPP_EXCEPTIONS</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-DNODE_ADDON_API_ENABLE_MAYBE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-I./node_modules/emnapi/include</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-I./node_modules/node-addon-api</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-L./node_modules/emnapi/lib/wasm32-wasi</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">--target=wasm32-wasi</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">--sysroot=</span><span style="color:#E1E4E8;">$WASI_SDK_PATH</span><span style="color:#79B8FF;">/share/wasi-sysroot</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-fno-exceptions</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-mexec-model=reactor</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--initial-memory=16777216</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export-dynamic</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export=malloc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export=free</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export=napi_register_wasm_v1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export-if-defined=node_api_module_get_api_version_v1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--import-undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export-table</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello.wasm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">hello.cpp</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-lemnapi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">clang++</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-O3</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-DBUILDING_NODE_EXTENSION</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-DNAPI_DISABLE_CPP_EXCEPTIONS</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-DNODE_ADDON_API_ENABLE_MAYBE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-I./node_modules/emnapi/include</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-I./node_modules/node-addon-api</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-L./node_modules/emnapi/lib/wasm32-wasi</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">--target=wasm32-wasi</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">--sysroot=</span><span style="color:#24292E;">$WASI_SDK_PATH</span><span style="color:#005CC5;">/share/wasi-sysroot</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-fno-exceptions</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-mexec-model=reactor</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--initial-memory=16777216</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export-dynamic</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export=malloc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export=free</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export=napi_register_wasm_v1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export-if-defined=node_api_module_get_api_version_v1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--import-undefined</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export-table</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello.wasm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">hello.cpp</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-lemnapi</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># \`node-addon-api\` 使用了 C++ 标准库，所以必须使用 WASI</span></span>
<span class="line"><span style="color:#6A737D;"># 但仍然可以在 \`wasm32-unknown-unknown\` 使用 C++ 代码编写</span></span>
<span class="line"><span style="color:#6A737D;"># Node-API C 风格的 API</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">clang++</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-O3</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-DBUILDING_NODE_EXTENSION</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-I./node_modules/emnapi/include</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-L./node_modules/emnapi/lib/wasm32</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">--target=wasm32</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-fno-exceptions</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-nostdlib</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--no-entry</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--initial-memory=16777216</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export-dynamic</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export=malloc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export=free</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export=napi_register_wasm_v1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export-if-defined=node_api_module_get_api_version_v1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--import-undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-Wl,--export-table</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node_api_c_api_only.wasm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">node_api_c_api_only.cpp</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-lemnapi</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">-ldlmalloc</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># -lemmalloc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># \`node-addon-api\` 使用了 C++ 标准库，所以必须使用 WASI</span></span>
<span class="line"><span style="color:#6A737D;"># 但仍然可以在 \`wasm32-unknown-unknown\` 使用 C++ 代码编写</span></span>
<span class="line"><span style="color:#6A737D;"># Node-API C 风格的 API</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">clang++</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-O3</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-DBUILDING_NODE_EXTENSION</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-I./node_modules/emnapi/include</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-L./node_modules/emnapi/lib/wasm32</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">--target=wasm32</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-fno-exceptions</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-nostdlib</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--no-entry</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--initial-memory=16777216</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export-dynamic</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export=malloc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export=free</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export=napi_register_wasm_v1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export-if-defined=node_api_module_get_api_version_v1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--import-undefined</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-Wl,--export-table</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node_api_c_api_only.wasm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">node_api_c_api_only.cpp</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-lemnapi</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">-ldlmalloc</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># -lemmalloc</span></span></code></pre></div></div></div><p>You should provide <code>operator new</code> and <code>operator delete</code> definition when targeting <code>wasm32-unknown-unknown</code></p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stddef.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">malloc</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> size);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">free</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void*</span><span style="color:#E1E4E8;"> p);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">new</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">size</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">malloc</span><span style="color:#E1E4E8;">(size);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">operator</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">delete</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">noexcept</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">free</span><span style="color:#E1E4E8;">(p);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stddef.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">malloc</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> size);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">free</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void*</span><span style="color:#24292E;"> p);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">new</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">malloc</span><span style="color:#24292E;">(size);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">delete</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">p</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">noexcept</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">free</span><span style="color:#24292E;">(p);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,10),e=[o];function c(t,r,E,y,i,F){return n(),a("div",null,e)}const _=s(p,[["render",c]]);export{d as __pageData,_ as default};
