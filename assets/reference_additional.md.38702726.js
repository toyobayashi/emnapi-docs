import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.21a77088.js";const u=JSON.parse('{"title":"Additional APIs","description":"","frontmatter":{},"headers":[],"relativePath":"reference/additional.md","filePath":"reference/additional.md","lastUpdated":1706611505000}'),p={name:"reference/additional.md"},l=e(`<h1 id="additional-apis" tabindex="-1">Additional APIs <a class="header-anchor" href="#additional-apis" aria-label="Permalink to &quot;Additional APIs&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>These APIs are in <code>emnapi.h</code>.</p></div><h4 id="emnapi-is-support-weakref" tabindex="-1">emnapi_is_support_weakref <a class="header-anchor" href="#emnapi-is-support-weakref" aria-label="Permalink to &quot;emnapi_is_support_weakref&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">emnapi_is_support_weakref</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">emnapi_is_support_weakref</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Returns <code>1</code> if the runtime support <code>FinalizationRegistry</code> and <code>WeakRef</code>, else returns <code>0</code>.</p><h4 id="emnapi-is-support-bigint" tabindex="-1">emnapi_is_support_bigint <a class="header-anchor" href="#emnapi-is-support-bigint" aria-label="Permalink to &quot;emnapi_is_support_bigint&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">emnapi_is_support_bigint</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">emnapi_is_support_bigint</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Returns <code>1</code> if the runtime support <code>BigInt</code>, else returns <code>0</code>.</p><h4 id="emnapi-is-node-binding-available" tabindex="-1">emnapi_is_node_binding_available <a class="header-anchor" href="#emnapi-is-node-binding-available" aria-label="Permalink to &quot;emnapi_is_node_binding_available&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">emnapi_is_node_binding_available</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">emnapi_is_node_binding_available</span><span style="color:#24292E;">();</span></span></code></pre></div><p>Returns <code>1</code> if the <code>nodeBinding</code> option of <code>emnapiInit</code> is provided, else returns <code>0</code>.</p><h4 id="emnapi-get-module-object" tabindex="-1">emnapi_get_module_object <a class="header-anchor" href="#emnapi-get-module-object" aria-label="Permalink to &quot;emnapi_get_module_object&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">napi_status </span><span style="color:#B392F0;">emnapi_get_module_object</span><span style="color:#E1E4E8;">(napi_env </span><span style="color:#FFAB70;">env</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                     napi_value</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">napi_status </span><span style="color:#6F42C1;">emnapi_get_module_object</span><span style="color:#24292E;">(napi_env </span><span style="color:#E36209;">env</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                     napi_value</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">result</span><span style="color:#24292E;">);</span></span></code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[out] result</code>: A <code>napi_value</code> representing the <code>Module</code> object of Emscripten.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded.</p><h4 id="emnapi-get-module-property" tabindex="-1">emnapi_get_module_property <a class="header-anchor" href="#emnapi-get-module-property" aria-label="Permalink to &quot;emnapi_get_module_property&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">napi_status </span><span style="color:#B392F0;">emnapi_get_module_property</span><span style="color:#E1E4E8;">(napi_env </span><span style="color:#FFAB70;">env</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                       </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">utf8name</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                       napi_value</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">napi_status </span><span style="color:#6F42C1;">emnapi_get_module_property</span><span style="color:#24292E;">(napi_env </span><span style="color:#E36209;">env</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                       </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">utf8name</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                       napi_value</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">result</span><span style="color:#24292E;">);</span></span></code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[in] utf8Name</code>: The name of the <code>Module</code> property to get.</li><li><code>[out] result</code>: The value of the property.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded.</p><h4 id="emnapi-create-memory-view" tabindex="-1">emnapi_create_memory_view <a class="header-anchor" href="#emnapi-create-memory-view" aria-label="Permalink to &quot;emnapi_create_memory_view&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_int8_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_uint8_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_uint8_clamped_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_int16_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_uint16_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_int32_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_uint32_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_float32_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_float64_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_bigint64_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_biguint64_array,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_data_view </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  emnapi_buffer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">} emnapi_memory_view_type;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">napi_status </span><span style="color:#B392F0;">emnapi_create_memory_view</span><span style="color:#E1E4E8;">(napi_env </span><span style="color:#FFAB70;">env</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      emnapi_memory_view_type </span><span style="color:#FFAB70;">type</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      </span><span style="color:#F97583;">void*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">external_data</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">byte_length</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      napi_finalize </span><span style="color:#FFAB70;">finalize_cb</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      </span><span style="color:#F97583;">void*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">finalize_hint</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      napi_value</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_int8_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_uint8_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_uint8_clamped_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_int16_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_uint16_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_int32_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_uint32_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_float32_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_float64_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_bigint64_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_biguint64_array,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_data_view </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  emnapi_buffer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">} emnapi_memory_view_type;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">napi_status </span><span style="color:#6F42C1;">emnapi_create_memory_view</span><span style="color:#24292E;">(napi_env </span><span style="color:#E36209;">env</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      emnapi_memory_view_type </span><span style="color:#E36209;">type</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      </span><span style="color:#D73A49;">void*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">external_data</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">byte_length</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      napi_finalize </span><span style="color:#E36209;">finalize_cb</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      </span><span style="color:#D73A49;">void*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">finalize_hint</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      napi_value</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">result</span><span style="color:#24292E;">);</span></span></code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[in] type</code>: The view type.</li><li><code>[in] external_data</code>: Pointer to the underlying byte buffer of the <code>ArrayBufferView</code>.</li><li><code>[in] byte_length</code>: The length in bytes of the underlying buffer.</li><li><code>[in] finalize_cb</code>: Optional callback to call when the <code>ArrayBufferView</code> is being collected.</li><li><code>[in] finalize_hint</code>: Optional hint to pass to the finalize callback during collection.</li><li><code>[out] result</code>: A <code>napi_value</code> representing a JavaScript <code>ArrayBufferView</code>.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded. Returns <code>napi_generic_failure</code> if <code>FinalizationRegistry</code> or <code>WeakRef</code> is not supported.</p><p>This API returns an N-API value corresponding to a JavaScript <code>ArrayBufferView</code>. The underlying byte buffer of the <code>ArrayBufferView</code> is externally allocated and managed. The caller must ensure that the byte buffer remains valid until the finalize callback is called.</p><h4 id="emnapi-get-runtime-version" tabindex="-1">emnapi_get_runtime_version <a class="header-anchor" href="#emnapi-get-runtime-version" aria-label="Permalink to &quot;emnapi_get_runtime_version&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">uint32_t</span><span style="color:#E1E4E8;"> major;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">uint32_t</span><span style="color:#E1E4E8;"> minor;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">uint32_t</span><span style="color:#E1E4E8;"> patch;</span></span>
<span class="line"><span style="color:#E1E4E8;">} emnapi_runtime_version;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">napi_status </span><span style="color:#B392F0;">emnapi_get_runtime_version</span><span style="color:#E1E4E8;">(napi_env </span><span style="color:#FFAB70;">env</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                       emnapi_runtime_version</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">version</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">uint32_t</span><span style="color:#24292E;"> major;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">uint32_t</span><span style="color:#24292E;"> minor;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">uint32_t</span><span style="color:#24292E;"> patch;</span></span>
<span class="line"><span style="color:#24292E;">} emnapi_runtime_version;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">napi_status </span><span style="color:#6F42C1;">emnapi_get_runtime_version</span><span style="color:#24292E;">(napi_env </span><span style="color:#E36209;">env</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                       emnapi_runtime_version</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">version</span><span style="color:#24292E;">);</span></span></code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[out] version</code>: The version information for emnapi runtime.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded.</p><p>This function fills the version struct with the major, minor, and patch version of emnapi runtime that is used.</p><h4 id="emnapi-sync-memory" tabindex="-1">emnapi_sync_memory <a class="header-anchor" href="#emnapi-sync-memory" aria-label="Permalink to &quot;emnapi_sync_memory&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">napi_status </span><span style="color:#B392F0;">emnapi_sync_memory</span><span style="color:#E1E4E8;">(napi_env </span><span style="color:#FFAB70;">env</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                               </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">js_to_wasm</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                               napi_value</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">arraybuffer_or_view</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                               </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">byte_offset</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                               </span><span style="color:#F97583;">size_t</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">length</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">napi_status </span><span style="color:#6F42C1;">emnapi_sync_memory</span><span style="color:#24292E;">(napi_env </span><span style="color:#E36209;">env</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                               </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#E36209;">js_to_wasm</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                               napi_value</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arraybuffer_or_view</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                               </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">byte_offset</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                               </span><span style="color:#D73A49;">size_t</span><span style="color:#24292E;"> </span><span style="color:#E36209;">length</span><span style="color:#24292E;">);</span></span></code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[in] js_to_wasm</code>: The direction of memory sync.</li><li><code>[in-out] arraybuffer_or_view</code>: The latest <code>ArrayBuffer</code> or <code>ArrayBufferView</code></li><li><code>[in] byte_offset</code></li><li><code>[in] length</code></li></ul><h4 id="emnapi-get-memory-address" tabindex="-1">emnapi_get_memory_address <a class="header-anchor" href="#emnapi-get-memory-address" aria-label="Permalink to &quot;emnapi_get_memory_address&quot;">​</a></h4><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">napi_status </span><span style="color:#B392F0;">emnapi_get_memory_address</span><span style="color:#E1E4E8;">(napi_env </span><span style="color:#FFAB70;">env</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      napi_value </span><span style="color:#FFAB70;">arraybuffer_or_view</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      </span><span style="color:#F97583;">void**</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">address</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      emnapi_ownership</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">ownership</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                      </span><span style="color:#F97583;">bool*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">runtime_allocated</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">napi_status </span><span style="color:#6F42C1;">emnapi_get_memory_address</span><span style="color:#24292E;">(napi_env </span><span style="color:#E36209;">env</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      napi_value </span><span style="color:#E36209;">arraybuffer_or_view</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      </span><span style="color:#D73A49;">void**</span><span style="color:#24292E;"> </span><span style="color:#E36209;">address</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      emnapi_ownership</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ownership</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                      </span><span style="color:#D73A49;">bool*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">runtime_allocated</span><span style="color:#24292E;">);</span></span></code></pre></div><ul><li><code>[in] env</code></li><li><code>[in] arraybuffer_or_view</code></li><li><code>[out] address</code></li><li><code>[out] ownership</code></li><li><code>[out] runtime_allocated</code></li></ul>`,35),o=[l];function t(c,r,i,y,E,d){return a(),n("div",null,o)}const m=s(p,[["render",t]]);export{u as __pageData,m as default};
